label.lang.en=ENGLISH
label.lang.gr=GERMAN
label.lang.fr=FRENCH
message.title=DevCRUD
message.description=<pre>This is a RESTful application which allows performing main CRUD operations via HTTP requests.<br><br>There are such entities there:<br> \
- Developer<br> \
- Skill<br> \
- Account<br> \
\
<br>Available actions with entities are:<br>\
- create (save)<br> \
- read (get by id, get all)<br> \
- update (update by id)<br> \
- delete (delete by id)<br> \
\
<br>Layers of this application:<br> \
> model - POJO classes<br> \
\
> repository - classes which interact with the storage<br> \
\
> service - simple business logic<br> \
\
> rest - servlets which handle HTTP requests<br> \
\
> storage - tables in a relational database<br> \
\
<h3>Model</h3> \
- Developer (Long id, String name, Set skills, Account account)<br> \
- Skill (Long id, String name)<br> \
- Account (Long id, String name, AccountStatus accountStatus)<br> \
\
<h3>Repository</h3> \
- JdbcDeveloperRepositoryImpl<br> \
- JdbcSkillRepositoryImpl<br> \
- JdbcAccountRepositoryImpl<br> \
\
<h3>Service</h3> \
- DeveloperService<br> \
- SkillService<br> \
- AccountService<br> \
\
<h3>Rest</h3> \
- DeveloperServlet<br> \
- SkillServlet<br> \
- AccountServlet<br> \
\
<br>JawsDB MySQL is used as a storage.<br> \
\
<br>To initialize database Liquibase is used.<br> \
\
<br>To perform HTTP requests by respective servlets following endpoints are used:<br> \
> /api/v1/developers<br> \
\
> /api/v1/skills<br> \
\
> /api/v1/accounts<br> \
\
<br>JUnit and Mockito are used to cover all basic functionality with unit tests. To imitate interaction with database H2 in-memory database is used.<br> \
\
<br>Technology stack: Java, MySQL, JDBC, Servlets, Liquibase, JUnit, Mockito, Tomcat, Logback, H2, JSP.<br> \
\
<br>Required 8 version of Java.<br> \
\
<br>To run this project you should compile the code and start the app with entry point WebAppRunner. Then Tomcat server will start locally. \
</pre>